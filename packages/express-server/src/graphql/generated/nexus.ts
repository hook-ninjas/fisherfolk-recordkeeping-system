/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"
import type { ValidateResolver } from "nexus-validate"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CreateFisherfolkInput: { // input type
    barangay: string; // String!
    cityMunicipality: string; // String!
    civilStatus: NexusGenEnums['CivilStatus']; // CivilStatus!
    contactNum: string; // String!
    dateOfBirth: NexusGenScalars['DateTime']; // DateTime!
    educationalBackground: NexusGenEnums['EducationalBackground']; // EducationalBackground!
    firstName: string; // String!
    gender: NexusGenEnums['Gender']; // Gender!
    lastName: string; // String!
    mainSrcGear: string; // String!
    mainSrcMethod: string; // String!
    mainSrcOfIncome: NexusGenEnums['SourceOfIncome']; // SourceOfIncome!
    middleName: string; // String!
    nationality: NexusGenEnums['Nationality']; // Nationality!
    numOfChildren?: number | null; // Int
    orgName?: string | null; // String
    orgPosition?: string | null; // String
    orgYearMember?: number | null; // Int
    otherSrcGear?: string | null; // String
    otherSrcMethod?: string | null; // String
    otherSrcOfIncome?: NexusGenEnums['SourceOfIncome'] | null; // SourceOfIncome
    personToNotify: string; // String!
    placeOfBirth: string; // String!
    province: string; // String!
    ptnAddress: string; // String!
    ptnContactNum: string; // String!
    ptnRelationship: string; // String!
    registrationNum: number; // Int!
    registrationType: NexusGenEnums['RegistrationType']; // RegistrationType!
    religion: string; // String!
    residentYear: number; // Int!
    salutation: NexusGenEnums['Salutation']; // Salutation!
  }
  CreateUserInput: { // input type
    password: string; // String!
    username: string; // String!
  }
}

export interface NexusGenEnums {
  CivilStatus: "LEGALLY_SEPARATED" | "MARRIED" | "SINGLE" | "WIDOWED"
  EducationalBackground: "COLLEGE" | "ELEMENTARY" | "HIGH_SCHOOL" | "POST_GRADUATE" | "VOCATIONAL"
  FisherfolkStatus: "ACTIVE" | "DECEASED" | "INACTIVE"
  Gender: "FEMALE" | "MALE"
  Nationality: "FILIPINO"
  RegistrationType: "NEW_REGISTRATION" | "RENEWAL"
  Salutation: "MR" | "MRS" | "MS"
  SourceOfIncome: "AQUACULTURE" | "CAPTURE_FISHING" | "FISH_PROCESSING" | "FISH_VENDING"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Fisherfolk: { // root type
    barangay?: string | null; // String
    cityMunicipality?: string | null; // String
    civilStatus?: NexusGenEnums['CivilStatus'] | null; // CivilStatus
    contactNum?: string | null; // String
    dateOfBirth?: NexusGenScalars['DateTime'] | null; // DateTime
    educationalBackground?: NexusGenEnums['EducationalBackground'] | null; // EducationalBackground
    firstName?: string | null; // String
    fisherfolkStatus?: NexusGenEnums['FisherfolkStatus'] | null; // FisherfolkStatus
    gender?: NexusGenEnums['Gender'] | null; // Gender
    id: number; // Int!
    image?: string | null; // String
    lastName?: string | null; // String
    mainSrcGear?: string | null; // String
    mainSrcMethod?: string | null; // String
    mainSrcOfIncome?: NexusGenEnums['SourceOfIncome'] | null; // SourceOfIncome
    middleName?: string | null; // String
    nationality?: NexusGenEnums['Nationality'] | null; // Nationality
    numOfChildren?: number | null; // Int
    orgName?: string | null; // String
    orgPosition?: string | null; // String
    orgYearMember?: number | null; // Int
    otherSrcGear?: string | null; // String
    otherSrcMethod?: string | null; // String
    otherSrcOfIncome?: NexusGenEnums['SourceOfIncome'] | null; // SourceOfIncome
    personToNotify?: string | null; // String
    placeOfBirth?: string | null; // String
    province?: string | null; // String
    ptnAddress?: string | null; // String
    ptnContactNum?: string | null; // String
    ptnRelationship?: string | null; // String
    registrationDate?: NexusGenScalars['DateTime'] | null; // DateTime
    registrationNum?: number | null; // Int
    registrationType?: NexusGenEnums['RegistrationType'] | null; // RegistrationType
    religion?: string | null; // String
    residentYear?: number | null; // Int
    salutation?: NexusGenEnums['Salutation'] | null; // Salutation
    signature?: string | null; // String
  }
  Mutation: {};
  Query: {};
  User: { // root type
    id: number; // Int!
    password: string; // String!
    username: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Fisherfolk: { // field return type
    barangay: string | null; // String
    cityMunicipality: string | null; // String
    civilStatus: NexusGenEnums['CivilStatus'] | null; // CivilStatus
    contactNum: string | null; // String
    dateOfBirth: NexusGenScalars['DateTime'] | null; // DateTime
    educationalBackground: NexusGenEnums['EducationalBackground'] | null; // EducationalBackground
    firstName: string | null; // String
    fisherfolkStatus: NexusGenEnums['FisherfolkStatus'] | null; // FisherfolkStatus
    fullName: string | null; // String
    gender: NexusGenEnums['Gender'] | null; // Gender
    id: number; // Int!
    image: string | null; // String
    lastName: string | null; // String
    mainSrcGear: string | null; // String
    mainSrcMethod: string | null; // String
    mainSrcOfIncome: NexusGenEnums['SourceOfIncome'] | null; // SourceOfIncome
    middleName: string | null; // String
    nationality: NexusGenEnums['Nationality'] | null; // Nationality
    numOfChildren: number | null; // Int
    orgName: string | null; // String
    orgPosition: string | null; // String
    orgYearMember: number | null; // Int
    otherSrcGear: string | null; // String
    otherSrcMethod: string | null; // String
    otherSrcOfIncome: NexusGenEnums['SourceOfIncome'] | null; // SourceOfIncome
    personToNotify: string | null; // String
    placeOfBirth: string | null; // String
    province: string | null; // String
    ptnAddress: string | null; // String
    ptnContactNum: string | null; // String
    ptnRelationship: string | null; // String
    registrationDate: NexusGenScalars['DateTime'] | null; // DateTime
    registrationNum: number | null; // Int
    registrationType: NexusGenEnums['RegistrationType'] | null; // RegistrationType
    religion: string | null; // String
    residentYear: number | null; // Int
    salutation: NexusGenEnums['Salutation'] | null; // Salutation
    signature: string | null; // String
  }
  Mutation: { // field return type
    createFisherfolk: NexusGenRootTypes['Fisherfolk'] | null; // Fisherfolk
    createUser: NexusGenRootTypes['User'] | null; // User
  }
  Query: { // field return type
    fisherfolks: NexusGenRootTypes['Fisherfolk'][]; // [Fisherfolk!]!
  }
  User: { // field return type
    id: number; // Int!
    password: string; // String!
    username: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Fisherfolk: { // field return type name
    barangay: 'String'
    cityMunicipality: 'String'
    civilStatus: 'CivilStatus'
    contactNum: 'String'
    dateOfBirth: 'DateTime'
    educationalBackground: 'EducationalBackground'
    firstName: 'String'
    fisherfolkStatus: 'FisherfolkStatus'
    fullName: 'String'
    gender: 'Gender'
    id: 'Int'
    image: 'String'
    lastName: 'String'
    mainSrcGear: 'String'
    mainSrcMethod: 'String'
    mainSrcOfIncome: 'SourceOfIncome'
    middleName: 'String'
    nationality: 'Nationality'
    numOfChildren: 'Int'
    orgName: 'String'
    orgPosition: 'String'
    orgYearMember: 'Int'
    otherSrcGear: 'String'
    otherSrcMethod: 'String'
    otherSrcOfIncome: 'SourceOfIncome'
    personToNotify: 'String'
    placeOfBirth: 'String'
    province: 'String'
    ptnAddress: 'String'
    ptnContactNum: 'String'
    ptnRelationship: 'String'
    registrationDate: 'DateTime'
    registrationNum: 'Int'
    registrationType: 'RegistrationType'
    religion: 'String'
    residentYear: 'Int'
    salutation: 'Salutation'
    signature: 'String'
  }
  Mutation: { // field return type name
    createFisherfolk: 'Fisherfolk'
    createUser: 'User'
  }
  Query: { // field return type name
    fisherfolks: 'Fisherfolk'
  }
  User: { // field return type name
    id: 'Int'
    password: 'String'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createFisherfolk: { // args
      data: NexusGenInputs['CreateFisherfolkInput']; // CreateFisherfolkInput!
    }
    createUser: { // args
      data: NexusGenInputs['CreateUserInput']; // CreateUserInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Validate mutation arguments.
     */
    validate?: ValidateResolver<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}